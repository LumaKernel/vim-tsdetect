{
  "name": "coc-tsdetect",
  "version": "4.0.3",
  "description": "coc.nvim extensions for detecting node and deno environment.",
  "keywords": [
    "deno",
    "typescript",
    "javascript",
    "neovim",
    "vim",
    "coc.nvim"
  ],
  "homepage": "https://github.com/LumaKernel/vim-tsdetect#readme",
  "bugs": {
    "url": "https://github.com/LumaKernel/vim-tsdetect/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LumaKernel/vim-tsdetect.git"
  },
  "license": "MIT",
  "author": "Luma",
  "main": "./out/coc.js",
  "files": [
    "autoload",
    "doc",
    "out",
    "plugin",
    "package.json",
    "LICENSE",
    "CHANGELOG.md"
  ],
  "scripts": {
    "build": "pnpm run ts-node-run ./scripts/build.ts",
    "coverage": "vitest run --coverage",
    "dev": "onchange -i \"**/*.ts\" \"tsconfig*.json\" -- pnpm run build",
    "lint-fix": "pnpm run lint --fix",
    "lint": "eslint \"**/*.{js,cjs,ts,json}\"",
    "test": "run-p test:*",
    "test:jest": "vitest run",
    "check": "run-p check:*",
    "check:tsc": "tsc --noEmit",
    "lint-quiet": "pnpm run lint --quiet",
    "ts-node-run": "ts-node -r tsconfig-paths/register -T"
  },
  "contributes": {
    "commands": [
      {
        "command": "tsdetect.manual.deno.initializeWorkspace",
        "title": "Initialize Deno Workspace Configuration",
        "category": "Deno Language Server"
      },
      {
        "command": "tsdetect.manual.node.initializeWorkspace",
        "title": "Initialize Node Workspace Configuration",
        "category": "TypeScript Language Server"
      },
      {
        "command": "tsdetect.internal.deno.initializeWorkspace",
        "title": "Initialize Deno Silently In Workspace Config",
        "category": "Deno Language Server"
      },
      {
        "command": "tsdetect.internal.node.initializeWorkspace",
        "title": "Initialize Node Silently In Workspace Config",
        "category": "TypeScript Language Server"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "coc.nvim TypeScript Detect",
      "properties": {
        "tsdetect.mode": {
          "type": "string",
          "default": "auto",
          "markdownDescription": "Set this `\"manual\"` to disable auto initialization. Variable `b:tsdetect_is_node` remains available.",
          "enum": [
            "auto",
            "manual"
          ],
          "examples": [
            "auto",
            "manual"
          ]
        },
        "tsdetect.doNotCreateOnNode": {
          "type": "boolean",
          "default": true,
          "examples": [
            false,
            true
          ],
          "markdownDescription": "By default, in Node.js environment, tsdetect does not create a workspace configuration (`.vim/coc-settings.json`). Set this `false` to create configuration file whether the configuration exists."
        },
        "tsdetect.nodeOverride": {
          "type": "object",
          "default": {
            "deno.lint": false,
            "coc.source.file.trimSameExts": [
              ".js",
              ".ts"
            ],
            "prettier.disableLanguages": []
          },
          "examples": [
            {}
          ],
          "markdownDescription": "Workspace configuration to be set in Node.js environment. If you want to extend original configuration, you need to include default ones. Not recommended to touch `deno.enable` and `tsserver.enable`."
        },
        "tsdetect.denoOverride": {
          "type": "object",
          "default": {
            "deno.lint": true,
            "coc.source.file.trimSameExts": [],
            "prettier.disableLanguages": [
              "javascript",
              "javascriptreact",
              "typescript",
              "typescriptreact"
            ]
          },
          "examples": [
            {},
            {
              "deno.unstable": true
            }
          ],
          "markdownDescription": "Workspace configuration to be set in Deno environment. If you want to extend original configuration, you need to include default ones. Not recommended not to touch `deno.enable` and `tsserver.enable`."
        }
      }
    }
  },
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:typescriptreact",
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onCommand:tsdetect.manual.deno.initializeWorkspace",
    "onCommand:tsdetect.manual.node.initializeWorkspace",
    "onCommand:tsdetect.internal.deno.initializeWorkspace",
    "onCommand:tsdetect.internal.node.initializeWorkspace"
  ],
  "dependencies": {
    "coc.nvim": "^0.0.82"
  },
  "devDependencies": {
    "@luma-dev/eslint-config-base": "^0.14.0",
    "@luma-dev/prettier-config": "^0.1.0",
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/commit-analyzer": "^9.0.2",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^8.0.6",
    "@semantic-release/npm": "^9.0.1",
    "@semantic-release/release-notes-generator": "^10.0.3",
    "@types/deep-equal": "^1.0.1",
    "@types/eslint": "^7.28.0",
    "@types/node": "12.12.0",
    "@vitest/coverage-c8": "^0.24.0",
    "better-typescript-lib": "^2.1.0",
    "deep-equal": "^2.0.5",
    "esbuild": "^0.15.10",
    "esbuild-node-externals": "^1.5.0",
    "eslint": "^7.32.0",
    "npm-run-all": "^4.1.5",
    "onchange": "^7.1.0",
    "prettier": "^2.7.1",
    "semantic-release": "^19.0.5",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.1.0",
    "typescript": "^4.4.3",
    "vite": "^3.1.7",
    "vitest": "^0.24.0"
  },
  "engines": {
    "coc": "0.0.82"
  }
}
